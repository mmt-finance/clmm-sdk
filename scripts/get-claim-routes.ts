// get routes from 'https://api.mmt.finance/routes'
// then save to 'src/constants/claim-routes.ts'

import * as fs from 'fs';
import * as path from 'path';

interface Route {
  routeId: string;
  sourceToken: string;
  targetToken: string;
  route: string[];
}

const SUI_COIN_TYPE =
  '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI';
const X_SUI_COIN_TYPE =
  '0x2b6602099970374cf58a2a1b9d96f005fccceb81e92eb059873baf420eb6c717::x_sui::X_SUI';
const USDC_COIN_TYPE =
  '0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC';

async function generateClaimRoutes() {
  try {
    console.log('Fetching routes from https://api.mmt.finance/routes...');

    const response = await fetch('https://api.mmt.finance/routes').then((res) => res.json());

    if (response.status !== 200) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const need = response.data.filter((route: Route) =>
      [SUI_COIN_TYPE, X_SUI_COIN_TYPE, USDC_COIN_TYPE].includes(route.targetToken),
    );

    console.log(`Filtered routes for target tokens: ${need.length}`);

    const routes: Record<string, Record<string, string[]>> = {
      [SUI_COIN_TYPE]: {},
      [X_SUI_COIN_TYPE]: {},
      [USDC_COIN_TYPE]: {},
    };

    need.forEach((route: Route) => {
      routes[route.targetToken][route.sourceToken] = route.route;
    });

    const fileContent = `// This file is generated by scripts/get-claim-routes.ts
// Do not edit this file manually

// key: targetToken
// value: sourceToken -> routePoolIds[]
export const CLAIM_ROUTES = ${JSON.stringify(routes, null, 2)};`;

    const targetPath = path.join(process.cwd(), 'src', 'constants', 'claim-routes.ts');

    const targetDir = path.dirname(targetPath);
    if (!fs.existsSync(targetDir)) {
      fs.mkdirSync(targetDir, { recursive: true });
    }

    fs.writeFileSync(targetPath, fileContent, 'utf8');

    console.log(`Routes successfully saved to ${targetPath}`);
    console.log(`Summary:`);
    console.log(`   - SUI: ${Object.keys(routes[SUI_COIN_TYPE]).length} routes`);
    console.log(`   - X_SUI: ${Object.keys(routes[X_SUI_COIN_TYPE]).length} routes`);
    console.log(`   - USDC: ${Object.keys(routes[USDC_COIN_TYPE]).length} routes`);
  } catch (error) {
    console.error('‚ùå Error generating claim routes:', error);
    process.exit(1);
  }
}

// Main execution
if (require.main === module) {
  generateClaimRoutes();
}

export { generateClaimRoutes };
